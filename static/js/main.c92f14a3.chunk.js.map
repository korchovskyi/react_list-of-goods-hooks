{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","sortedGoods","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","showResetButton","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA/CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW7C,OAJIX,GACFI,EAAaQ,UAGRR,EAwBaS,CAAkBnB,EAAiB,CACrDI,WACAE,eAGIc,EAAkBhB,IAAaL,EAASI,MAAQG,EAEtD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYnB,IAAaL,EAASY,WAEtCa,QAlC8B,WACpCnB,EAAYN,EAASY,WA0BjB,iCAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYnB,IAAaL,EAASiB,SAEtCQ,QA1CwB,WAC9BnB,EAAYN,EAASiB,SAkCjB,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAlDmB,WACzBjB,GAAeD,IA0CX,qBAYEc,GAEE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAxDa,WACvBnB,EAAYN,EAASI,MACrBI,GAAc,IAmDN,sBAUN,6BACGC,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCrIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c92f14a3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleSortAlphabeticallyClick = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLengthClick = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverseClick = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleResetClick = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const sortedGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const showResetButton = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleSortAlphabeticallyClick}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortByLengthClick}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {(showResetButton)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleResetClick}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}